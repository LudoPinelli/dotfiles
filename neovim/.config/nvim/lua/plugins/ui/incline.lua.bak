return {
  "b0o/incline.nvim",
  dependencies = { "nvim-tree/nvim-web-devicons" },
  event = "VeryLazy",
  config = function()
    require("incline").setup({
      window = {
        placement = {
          vertical = "bottom",
        },
      },
      render = function(props)
        local filename =
          vim.fn.fnamemodify(vim.api.nvim_buf_get_name(props.buf), ":t")
        local ft_icon, ft_color =
          require("nvim-web-devicons").get_icon_color(filename)
        local modified = vim.bo[props.buf].modified and "bold" or "regular"
        local guifg_mod = vim.bo[props.buf].modified and "#f38ba8" or "none"

        local function get_git_diff()
          local icons = { removed = "", changed = "", added = "" }
          icons["changed"] = icons.modified
          local signs = vim.b[props.buf].gitsigns_status_dict
          local labels = {}
          if signs == nil then
            return labels
          end
          for name, icon in pairs(icons) do
            if tonumber(signs[name]) and signs[name] > 0 then
              table.insert(
                labels,
                { icon .. " " .. signs[name] .. " ", group = "Diff" .. name }
              )
            end
          end
          return labels
        end

        local lineinfo = function()
          if vim.bo[props.buf].filetype == "alpha" then
            return ""
          end
          return " " .. vim.fn.line(".") .. ":" .. vim.fn.col(".") .. " "
        end

        local function get_diagnostic_label()
          local icons =
            { error = "", warn = "", info = "", hint = "" }
          local label = {}

          for severity, icon in pairs(icons) do
            local n = #vim.diagnostic.get(
              props.buf,
              { severity = vim.diagnostic.severity[string.upper(severity)] }
            )
            if n > 0 then
              table.insert(label, {
                icon .. " " .. n .. " ",
                group = "DiagnosticSign" .. severity,
              })
            end
          end
          if #label > 0 then
            table.insert(label, { "| " })
          end
          return label
        end

        return {
          { "█ ", guifg = "#89b4fa", guibg = "none" },
          { (ft_icon or "") .. " ", guifg = ft_color, guibg = "none" },
          {
            filename .. " ",
            gui = modified,
            guifg = guifg_mod,
          },
          { "| " },
          { get_diagnostic_label() },
          { get_git_diff() },
          { lineinfo(), guibg = "#89b4fa", guifg = "#1e1e2e" },
          { "", guifg = "#89b4fa", guibg = "none" },
        }
      end,
    })
  end,
}
